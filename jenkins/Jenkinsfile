pipeline {
    environment {
        MAVEN_IMAGE = "maven:3-openjdk-11-slim"
        GIT_TAG = sh(returnStdout: true, script: 'git rev-parse --short HEAD').trim()
        PROJECT_VERSION = readMavenPom().getVersion().trim()
        DATE = sh(returnStdout: true, script: "date '+%y%m%d'").trim()
        registryCredential = "jensondocker"
    }
    agent {
        docker {
            image "maven:3-openjdk-11-slim"
            args '-v $HOME/.m2:/root/.m2'
            reuseNode true
        }
    }

    stages {
        stage('Build') {
            steps {
                sh 'mvn -B -DskipTests clean package'
                stash includes: 'target/*.jar', name: 'JAR'
                stash includes: 'Dockerfile', name: 'DOCKER_FILE'
            }
            post {
                success {
                    echo "${STAGE_NAME} success!!!"
                }
                failure {
                    echo "${STAGE_NAME} failed :( "
                }
            }
        }
        stage('Test') {
            steps {
                sh 'mvn test'
                jacoco()
            }
            post {
                always {
                    junit 'target/surefire-reports/*.xml'
                }
            }
        }
        stage('Deliver') {
            steps {
                sh './jenkins/scripts/deliver.sh'
            }
            post {
                always {
                    archiveArtifacts artifacts: 'target/*.jar', followSymlinks: false
                }
            }
        }
        stage('Dockerize and publish') {
            steps {
                unstash 'JAR'
                unstash 'DOCKER_FILE'
                script {
                    docker.withRegistry('', registryCredential) {
                        dockerImage = docker.build "jensonjoseph/spring-petclinic:${PROJECT_VERSION}-${DATE}-${GIT_TAG}"
                        dockerImage.push()
                    }
                }
            }
        }
    }
}
